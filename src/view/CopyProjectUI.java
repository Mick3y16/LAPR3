/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.CopyProjectController;
import java.awt.EventQueue;
import java.awt.Frame;
import javax.swing.JOptionPane;
import model.Simulator;

/**
 *
 * @author G11
 */
public class CopyProjectUI extends javax.swing.JDialog {

    /**
     * Frame parent.
     */
    private Frame parent;

    /**
     * Copy project controller.
     */
    private CopyProjectController controller;

    /**
     * Name of the original project.
     */
    private String oldName;

    /**
     * Description of the original project.
     */
    private String oldDescription;

    /**
     * Creates new form CopyProjectUI
     *
     * @param parent
     * @param modal
     * @param simulator
     */
    public CopyProjectUI(java.awt.Frame parent, boolean modal, Simulator simulator) {
        super(parent, "Copy Project", modal);
        try {
            this.controller = new CopyProjectController(simulator);
            this.parent = parent;
            setResizable(false);
            initComponents();
            setLocationRelativeTo(null);
            pack();
            this.oldName = this.controller.getProjectName();
            this.oldDescription = this.controller.getProjectDescription();
            this.txtName.setText(this.oldName);
            this.txtDescription.setText(this.oldDescription);

        } catch (IllegalArgumentException e) {
            Window.displayError(e.getMessage());
            EventQueue.invokeLater(new Runnable() {

                @Override
                public void run() {
                    dispose();
                }
            });
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jLabel1 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnCopy = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescription = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Name:");

        jLabel2.setText("Description: ");

        btnCopy.setText("Copy Current Project");
        btnCopy.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnCopyActionPerformed(evt);
            }
        });

        txtDescription.setColumns(20);
        txtDescription.setRows(5);
        jScrollPane1.setViewportView(txtDescription);

        jButton1.setText("Exit");
        jButton1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1)
                            .addComponent(txtName)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(btnCopy)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCopy)
                    .addComponent(jButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCopyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCopyActionPerformed
        if (this.txtName.getText().compareToIgnoreCase(this.oldName) == 0) {
            JOptionPane.showMessageDialog(parent, "The name must be unique.", "", JOptionPane.WARNING_MESSAGE);
        } else if (this.txtName.getText().trim().isEmpty() || this.txtName.getText() == null) {
            JOptionPane.showMessageDialog(parent, "The name of the project cannot be empty.", "", JOptionPane.WARNING_MESSAGE);
        } else if (this.txtDescription.getText().trim().isEmpty() || this.txtDescription.getText() == null) {
            JOptionPane.showMessageDialog(parent, "The description of the project cannot be empty.", "", JOptionPane.WARNING_MESSAGE);
        } else {
            this.controller.setProjectName(this.txtName.getText());
            this.controller.setProjectDescription(this.txtDescription.getText());
            if (this.controller.registerCopy()) {
                JOptionPane.showMessageDialog(parent, "Project successfully copied.", "", JOptionPane.INFORMATION_MESSAGE);
            }
        }
        this.dispose();
    }//GEN-LAST:event_btnCopyActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCopy;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtDescription;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
}
